/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type Footer = {
  _id: string
  _type: 'footer'
  _createdAt: string
  _updatedAt: string
  _rev: string
  copyrightText?: string
  socialLinks?: Array<{
    platform?: 'facebook' | 'twitter' | 'instagram' | 'linkedin' | 'youtube' | 'github' | 'other'
    href?: string
    _type: 'socialLink'
    _key: string
  }>
  navigation?: Array<{
    label?: string
    href?: string
    _type: 'navigationLink'
    _key: string
  }>
}

export type WhatsappConfig = {
  _id: string
  _type: 'whatsappConfig'
  _createdAt: string
  _updatedAt: string
  _rev: string
  phoneNumber?: string
  initialMessage?: string
}

export type PriceSection = {
  _id: string
  _type: 'priceSection'
  _createdAt: string
  _updatedAt: string
  _rev: string
  topText?: Array<{
    children?: Array<{
      marks?: Array<string>
      text?: string
      _type: 'span'
      _key: string
    }>
    style?: 'normal' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'blockquote' | 'code'
    listItem?: 'bullet' | 'number'
    markDefs?: Array<
      | {
          href?: string
          blank?: boolean
          _type: 'link'
          _key: string
        }
      | {
          lineHeight?: 'normal' | 'relaxed' | 'tight'
          highlightBox?: 'none' | 'white' | 'black' | 'orange' | 'blue' | 'dark-blue'
          textColor?: 'black' | 'white' | 'orange' | 'blue' | 'dark-blue'
          fontFamily?: 'montserrat' | 'archivo-black-400' | 'lora' | 'montagu' | 'work-sans'
          _type: 'textSettings'
          _key: string
        }
    >
    level?: number
    _type: 'block'
    _key: string
  }>
  ctaButtonText?: string
  regularPriceTitle?: string
  regularPrice?: string
  launchPriceTitle?: string
  launchPrice?: string
  boxItemsTitle?: string
  boxItems?: Array<string>
  boxCtaText?: string
}

export type RichText = Array<{
  children?: Array<{
    marks?: Array<string>
    text?: string
    _type: 'span'
    _key: string
  }>
  style?: 'normal' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'blockquote' | 'code'
  listItem?: 'bullet' | 'number'
  markDefs?: Array<
    | {
        href?: string
        blank?: boolean
        _type: 'link'
        _key: string
      }
    | {
        lineHeight?: 'normal' | 'relaxed' | 'tight'
        highlightBox?: 'none' | 'white' | 'black' | 'orange' | 'blue' | 'dark-blue'
        textColor?: 'black' | 'white' | 'orange' | 'blue' | 'dark-blue'
        fontFamily?: 'montserrat' | 'archivo-black-400' | 'lora' | 'montagu' | 'work-sans'
        _type: 'textSettings'
        _key: string
      }
  >
  level?: number
  _type: 'block'
  _key: string
}>

export type FAQSection = {
  _id: string
  _type: 'FAQSection'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title?: string
  faqs?: Array<{
    question?: string
    answer?: RichText
    _type: 'faq'
    _key: string
  }>
}

export type WarrantySection = {
  _id: string
  _type: 'warrantySection'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title?: string
  subtitle?: RichText
  Carousel?: {
    title?: string
    people?: Array<{
      name?: string
      role?: string
      linkedIn?: string
      _key: string
    }>
  }
  ctaButton?: string
}

export type HowReservationWorksSection = {
  _id: string
  _type: 'howReservationWorksSection'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title?: string
  cards?: Array<{
    content?: string
    _type: 'card'
    _key: string
  }>
  bottomText?: RichText
  ctaButton?: string
}

export type AboutMeSection = {
  _id: string
  _type: 'aboutMeSection'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title?: string
  image?: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    media?: unknown
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    alt?: string
    _type: 'image'
  }
  mobileImage?: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    media?: unknown
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    alt?: string
    _type: 'image'
  }
  content?: RichText
}

export type SuccessCaseSection = {
  _id: string
  _type: 'successCaseSection'
  _createdAt: string
  _updatedAt: string
  _rev: string
  cases?: Array<
    | {
        title?: string
        content?: RichText
        image?: {
          asset?: {
            _ref: string
            _type: 'reference'
            _weak?: boolean
            [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
          }
          media?: unknown
          hotspot?: SanityImageHotspot
          crop?: SanityImageCrop
          _type: 'image'
        }
        _type: 'case'
        _key: string
      }
    | {
        url?: string
        _type: 'video'
        _key: string
      }
  >
}

export type CurrentEditionPeopleSection = {
  _id: string
  _type: 'currentEditionPeopleSection'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title?: string
  subtitle?: RichText
  cards?: Array<{
    name?: string
    subtitle?: string
    content?: RichText
    _key: string
  }>
  postCardsText?: string
  titleGuidanceCards?: string
  processGuidanceCards?: Array<{
    icon?: {
      asset?: {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
      }
      media?: unknown
      hotspot?: SanityImageHotspot
      crop?: SanityImageCrop
      _type: 'image'
    }
    title?: string
    content?: string
    _key: string
  }>
  bonusTitle?: string
  bonusSubtitle?: string
  bonuses?: Array<{
    title?: string
    description?: RichText
    image?: {
      asset?: {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
      }
      media?: unknown
      hotspot?: SanityImageHotspot
      crop?: SanityImageCrop
      _type: 'image'
    }
    cost?: string
    _key: string
  }>
  extraBonusesTitle?: string
  extraBonusesSubtitle?: string
  extraBonuses?: Array<{
    title?: string
    description?: RichText
    image?: {
      asset?: {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
      }
      media?: unknown
      hotspot?: SanityImageHotspot
      crop?: SanityImageCrop
      _type: 'image'
    }
    cost?: string
    _key: string
  }>
  warningTitle?: string
  warningSubtitle?: string
  warningText?: RichText
  testimonials?: Array<{
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    media?: unknown
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    _type: 'image'
    _key: string
  }>
}

export type ReasonSection = {
  _id: string
  _type: 'reasonSection'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title?: string
  image?: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    media?: unknown
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    _type: 'image'
  }
  content?: RichText
}

export type ExperiencingSection = {
  _id: string
  _type: 'experiencingSection'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title?: RichText
  cards?: Array<{
    topText?: string
    bottomText?: string
    _type: 'card'
    _key: string
  }>
  bottomText?: RichText
  ctaButton?: string
}

export type ConversationSection = {
  _id: string
  _type: 'conversationSection'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title?: string
  image?: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    media?: unknown
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    alt?: string
    _type: 'image'
  }
  conversationTitle?: string
  content?: RichText
}

export type Hero = {
  _id: string
  _type: 'hero'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title?: string
  subtitle?: string
  mainContent?: RichText
  coloredSectionText?: string
  ctaButton?: string
}

export type HomePage = {
  _id: string
  _type: 'homePage'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title?: string
  seo?: Seo
  redirectionButtonUrl?: string
  sections?: Array<
    | {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        _key: string
        [internalGroqTypeReferenceTo]?: 'aboutMeSection'
      }
    | {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        _key: string
        [internalGroqTypeReferenceTo]?: 'conversationSection'
      }
    | {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        _key: string
        [internalGroqTypeReferenceTo]?: 'currentEditionPeopleSection'
      }
    | {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        _key: string
        [internalGroqTypeReferenceTo]?: 'experiencingSection'
      }
    | {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        _key: string
        [internalGroqTypeReferenceTo]?: 'FAQSection'
      }
    | {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        _key: string
        [internalGroqTypeReferenceTo]?: 'hero'
      }
    | {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        _key: string
        [internalGroqTypeReferenceTo]?: 'howReservationWorksSection'
      }
    | {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        _key: string
        [internalGroqTypeReferenceTo]?: 'reasonSection'
      }
    | {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        _key: string
        [internalGroqTypeReferenceTo]?: 'successCaseSection'
      }
    | {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        _key: string
        [internalGroqTypeReferenceTo]?: 'warrantySection'
      }
    | {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        _key: string
        [internalGroqTypeReferenceTo]?: 'priceSection'
      }
  >
}

export type Seo = {
  _type: 'seo'
  title?: string
  description?: string
  keywords?: Array<string>
  openGraph?: {
    title?: string
    description?: string
    image?: {
      asset?: {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
      }
      media?: unknown
      hotspot?: SanityImageHotspot
      crop?: SanityImageCrop
      alt?: string
      _type: 'image'
    }
    type?: 'website' | 'article' | 'product'
  }
  twitter?: {
    cardType?: 'summary' | 'summary_large_image'
    site?: string
    creator?: string
  }
  canonical?: string
  noIndex?: boolean
  noFollow?: boolean
}

export type Header = {
  _id: string
  _type: 'header'
  _createdAt: string
  _updatedAt: string
  _rev: string
  navigation?: Array<{
    label?: string
    href?: string
    isButton?: boolean
    _type: 'navigationLink'
    _key: string
  }>
  countdownBanner?: {
    enabled?: boolean
    limitDate?: string
    mainText?: string
    ctaButtonText?: string
    href?: string
  }
}

export type SanityImagePaletteSwatch = {
  _type: 'sanity.imagePaletteSwatch'
  background?: string
  foreground?: string
  population?: number
  title?: string
}

export type SanityImagePalette = {
  _type: 'sanity.imagePalette'
  darkMuted?: SanityImagePaletteSwatch
  lightVibrant?: SanityImagePaletteSwatch
  darkVibrant?: SanityImagePaletteSwatch
  vibrant?: SanityImagePaletteSwatch
  dominant?: SanityImagePaletteSwatch
  lightMuted?: SanityImagePaletteSwatch
  muted?: SanityImagePaletteSwatch
}

export type SanityImageDimensions = {
  _type: 'sanity.imageDimensions'
  height?: number
  width?: number
  aspectRatio?: number
}

export type SanityImageHotspot = {
  _type: 'sanity.imageHotspot'
  x?: number
  y?: number
  height?: number
  width?: number
}

export type SanityImageCrop = {
  _type: 'sanity.imageCrop'
  top?: number
  bottom?: number
  left?: number
  right?: number
}

export type SanityFileAsset = {
  _id: string
  _type: 'sanity.fileAsset'
  _createdAt: string
  _updatedAt: string
  _rev: string
  originalFilename?: string
  label?: string
  title?: string
  description?: string
  altText?: string
  sha1hash?: string
  extension?: string
  mimeType?: string
  size?: number
  assetId?: string
  uploadId?: string
  path?: string
  url?: string
  source?: SanityAssetSourceData
}

export type SanityImageAsset = {
  _id: string
  _type: 'sanity.imageAsset'
  _createdAt: string
  _updatedAt: string
  _rev: string
  originalFilename?: string
  label?: string
  title?: string
  description?: string
  altText?: string
  sha1hash?: string
  extension?: string
  mimeType?: string
  size?: number
  assetId?: string
  uploadId?: string
  path?: string
  url?: string
  metadata?: SanityImageMetadata
  source?: SanityAssetSourceData
}

export type SanityImageMetadata = {
  _type: 'sanity.imageMetadata'
  location?: Geopoint
  dimensions?: SanityImageDimensions
  palette?: SanityImagePalette
  lqip?: string
  blurHash?: string
  hasAlpha?: boolean
  isOpaque?: boolean
}

export type Geopoint = {
  _type: 'geopoint'
  lat?: number
  lng?: number
  alt?: number
}

export type Slug = {
  _type: 'slug'
  current?: string
  source?: string
}

export type SanityAssetSourceData = {
  _type: 'sanity.assetSourceData'
  name?: string
  id?: string
  url?: string
}

export type AllSanitySchemaTypes =
  | Footer
  | WhatsappConfig
  | PriceSection
  | RichText
  | FAQSection
  | WarrantySection
  | HowReservationWorksSection
  | AboutMeSection
  | SuccessCaseSection
  | CurrentEditionPeopleSection
  | ReasonSection
  | ExperiencingSection
  | ConversationSection
  | Hero
  | HomePage
  | Seo
  | Header
  | SanityImagePaletteSwatch
  | SanityImagePalette
  | SanityImageDimensions
  | SanityImageHotspot
  | SanityImageCrop
  | SanityFileAsset
  | SanityImageAsset
  | SanityImageMetadata
  | Geopoint
  | Slug
  | SanityAssetSourceData
export declare const internalGroqTypeReferenceTo: unique symbol
